version: '3.8'

services:
  redis:
    image: redis:6.2-alpine
    container_name: scraping_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - scraping_network

  mongo:
    image: mongo:5.0
    container_name: scraping_mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - scraping_network

  postgres:
    image: postgres:13-alpine
    container_name: scraping_postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: scraper
      POSTGRES_PASSWORD: securepassword
      POSTGRES_DB: scraping_data
    networks:
      - scraping_network

  scraper:
    build: .
    container_name: scraping_app
    depends_on:
      - redis
      - mongo
      - postgres
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      REDIS_HOST: redis
      MONGO_URI: "mongodb://root:example@mongo:27017/"
      POSTGRES_URI: "postgresql://scraper:securepassword@postgres:5432/scraping_data"
    networks:
      - scraping_network

  prometheus:
    image: prom/prometheus:latest
    container_name: scraping_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - scraping_network

  grafana:
    image: grafana/grafana:latest
    container_name: scraping_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - scraping_network

volumes:
  redis_data:
  mongo_data:
  postgres_data:
  grafana_data:

networks:
  scraping_network:
    driver: bridge

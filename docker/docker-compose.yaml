version: '3.8'

services:
  scraper:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      - REDIS_HOST=redis
      - MONGODB_URI=mongodb://mongodb:27017/
      - POSTGRES_HOST=postgres
    depends_on:
      - redis
      - mongodb
      - postgres
    volumes:
      - ../data:/app/data
    networks:
      - scraper-network

  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - scraper-network

  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - scraper-network

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=scraping_data
      - POSTGRES_USER=scraper
      - POSTGRES_PASSWORD=scraper_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - scraper-network

  prometheus:
    image: prom/prometheus:v2.44.0
    ports:
      - "9090:9090"
    volumes:
      - ../config/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    networks:
      - scraper-network

  grafana:
    image: grafana/grafana:9.5.2
    ports:
      - "3000:3000"
    volumes:
      - ../config/grafana:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - scraper-network

networks:
  scraper-network:
    driver: bridge

volumes:
  redis-data:
  mongodb-data:
  postgres-data:
  prometheus-data:
  grafana-data:
